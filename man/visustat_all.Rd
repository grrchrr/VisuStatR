% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visustat_all.R
\name{visustat_all}
\alias{visustat_all}
\title{visustat_all}
\usage{
visustat_all(
  df,
  images,
  stack = FALSE,
  frame_range = NULL,
  display_frame = TRUE,
  display_summary = FALSE,
  visustat_frame.list = NULL,
  visustat_summary.list = NULL,
  save = TRUE,
  file_name = NULL,
  width = 2000,
  height = 1200,
  rel_width = 0.66,
  browse = FALSE,
  return = FALSE
)
}
\arguments{
\item{df}{dataframe of the form: \code{df(track, time, X, Y, mapping_parameters, ...)}}

\item{images}{\code{vector}: filenames of images ordered by frames/time}

\item{frame_range}{\code{integer}: frames to be mapped; default=\code{NULL} maps full time/frame range found in \code{df}}

\item{display_frame}{\code{logical}: display output from \code{\link{visustat_frame}}}

\item{display_summary}{\code{logical}: display output from \code{\link{visustat_summary}}}

\item{visustat_frame.list}{\code{list}: parameters passed to \code{\link{visustat_frame}}}

\item{visustat_summary.list}{\code{list}: parameters passed to \code{\link{visustat_summary}}}

\item{save}{\code{logical}: saves tiff-stack or image to ./output/visustatr-date.tiff}

\item{width}{\code{numeric}: width of output tiff in pixels}

\item{height}{\code{numeric}: height of output tiff in pixels}

\item{rel_width}{\code{numeric}: \code{if(display_frame & display_summary)}, \code{rel_width} defines
the relative width of the summary plot to the mapped frame}

\item{browse}{\code{logical}: browse output with default system application for tiffs, e.g. imageJ}

\item{return}{\code{logical}: return images-series as magick image-stack}
}
\description{
Creates time-resolved images series of tracking data with modifiable parameter mapping.
\code{visustat_all} is a wrapper function for \code{\link{visustat_frame}} and \code{\link{visustat_summary}}. User parameters for both
functions can be passed via the lists \code{visustat_frame.list} and \code{visustat_summary.list}.
}
\examples{
# import tracking data
data(hiv_motility)
# get image files
images <- hiv_motility_images()
# run visustatR with default settings
visustat_all(hiv_motility, images, save=FALSE)
# run visustatR with visustat_frame and visustat_summary
tracks <- c(34, 125, 199, 205)
summary_pars <- list(par.map='angle', time.unit='min', tracks=tracks)
frame_pars <- list(par.map='angle', par.shape='type', tracks=tracks)
visustat_all(hiv_motility,
 images,
 frame_range = c(1,10),
 display_summary = 1,
 visustat_frame.list = frame_pars,
 visustat_summary.list = summary_pars,
 file_name = 'hiv_tracking_angle',
 save=FALSE
 )
}
